const awards = [
  {
    name: "James Peebles",
    category: "Physics",
    research: "Theoretical discoveries in physical cosmology",
    year: 2019,
  },
  {
    name: "Michel Mayor",
    category: "Physics",
    research: "Discovery of an exoplanet orbiting a solar-type star",
    year: 2019,
  },
  {
    name: "Didier Queloz",
    category: "Physics",
    research: "Discovery of an exoplanet orbiting a solar-type star",
    year: 2019,
  },
  {
    name: "John B. Goodenough",
    category: "Chemistry",
    research: "Development of lithium-ion batteries",
    year: 2019,
  },
  {
    name: "M. Stanley Whittingham",
    category: "Chemistry",
    research: "Development of lithium-ion batteries",
    year: 2019,
  },
  {
    name: "Akira Yoshino",
    category: "Chemistry",
    research: "Development of lithium-ion batteries",
    year: 2019,
  },
  {
    name: "Arthur Ashkin",
    category: "Physics",
    research: "Optical tweezers and their application to biological systems",
    year: 2018,
  },
  {
    name: "Gerard Mourou",
    category: "Physics",
    research: "Method of generating high-intensity, ultra-short optical pulses",
    year: 2018,
  },
  {
    name: "Donna Strickland",
    category: "Physics",
    research: "Method of generating high-intensity, ultra-short optical pulses",
    year: 2018,
  },
  {
    name: "Frances H. Arnold",
    category: "Chemistry",
    research: "Directed evolution of enzymes",
    year: 2018,
  },
  {
    name: "George P. Smith",
    category: "Chemistry",
    research: "Phage display of peptides and antibodies.",
    year: 2018,
  },
  {
    name: "Sir Gregory P. Winter",
    category: "Chemistry",
    research: "Phage display of peptides and antibodies.",
    year: 2018,
  },
];

function processShare(winners) {
  let m = new Map();
  for (let i of winners) {
    if (m.has(i.research)) m.set(i.research, m.get(i.research) + 1);
    else m.set(i.research, 1);
  }

  let topics = m.size;
  let processsed = [];

  for (let i of winners) {
    let share = 1 / topics / m.get(i.research);
    processsed.push({ name: i.name, share: share });
  }

  processsed.sort(function (a, b) {
    return a.share < b.share ? 1 : -1;
  });
  console.log(processsed);
  return processsed;
}

function myFunction() {
  let years = new Set(awards.map((y) => y.year));
  let categories = new Set(awards.map((c) => c.category));
  console.log(categories);
  let result = [];
  years.forEach((year) => {
    let yearData = awards.filter((y) => y.year == year);

    categories.forEach((c) => {
      let data = yearData.filter((award) => award.category === c);
      // console.log(data);
      let newData = {
        category: c,
        year: year,
        winners: processShare(data),
      };
      result.push(newData);
    });
  });
  console.log(result);
  return result;
}

myFunction();